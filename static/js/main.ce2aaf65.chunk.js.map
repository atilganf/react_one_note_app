{"version":3,"sources":["components/Nav.js","components/Chapter.js","components/Chapters.js","components/Pages.js","components/Aside.js","components/Main.js","components/OneNoteApp.js","App.js","serviceWorker.js","index.js"],"names":["Nav","className","icon","React","Component","Chapter","props","checkNamed","e","keyCode","setState","named","state","clrs","this","style","backgroundColor","clr_num","type","onKeyUp","defaultValue","num","readOnly","autoFocus","borderWidth","cursor","display","onClick","console","log","Chapters","addChapter","chapters","id","shortid","generate","text","pages","chapter_num","map","chapter","key","Pages","Aside","Main","library","add","faPlus","faSearch","faAddressBook","faClock","OneNoteApp","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ce2aaf65.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\n\r\nexport default class Nav extends React.Component {\r\n   render() {\r\n      return (\r\n         <div className=\"Nav\">\r\n            <button className=\"books_btn active\" ><FontAwesomeIcon\r\n               className=\"book icon\" icon={[\"far\", \"address-book\"]} /></button>\r\n            <button className=\"search_btn\"><FontAwesomeIcon\r\n               className=\"search icon\" icon={[\"fas\", \"search\"]} /></button>\r\n            <button className=\"last_btn\"><FontAwesomeIcon\r\n               className=\"clock icon\" icon={[\"far\", \"clock\"]} /></button>\r\n         </div>\r\n      );\r\n   }\r\n}","import React from \"react\";\r\nexport default class Chapter extends React.Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n         clrs: [\"#5B2D90\", \"#D20078\", \"#0069AF\", \"#00A0D7\", \"#004F8B\",\r\n            \"#008C3A\", \"#00B44B\", \"#C10052\", \"#E71224\", \"#F6630D\", \"#C6A377\"],\r\n         named: false,\r\n      }\r\n   }\r\n   checkNamed = (e) => {\r\n      if (e.keyCode === 13) {\r\n         this.setState({\r\n            named: true,\r\n         });\r\n      }\r\n   }\r\n   render() {\r\n      let clrs = this.state.clrs;\r\n      return (\r\n         <div className=\"Chapter\">\r\n            <div className=\"mark_cnt\">\r\n               <div className=\"mark\">\r\n                  <div className=\"mark_1\" style={{ backgroundColor: clrs[this.props.clr_num] }} />\r\n                  <div className=\"mark_2\" style={{ backgroundColor: clrs[this.props.clr_num] }} />\r\n               </div>\r\n            </div>\r\n            <div className=\"txtCont\">\r\n               <div className=\"txt\">\r\n                  <input type=\"text\" onKeyUp={(e) => this.checkNamed(e)}\r\n                     defaultValue={\"New Section \" + this.props.num} \r\n                     readOnly={this.state.named} autoFocus \r\n                     style={{\r\n                        borderWidth: this.state.named ? \"0\" : \"2px\",\r\n                        backgroundColor: this.state.named ? \"inherit\" : \"white\",\r\n                        cursor: this.state.named ? \"default\" : \"auto\"\r\n                     }} />\r\n                  <button style={{ display: this.state.named ? \"none\" : \"inline-block\" }}\r\n                     onClick={() => console.log(\"deleteFunction\")}>X</button>\r\n               </div>\r\n            </div>\r\n         </div>\r\n      );\r\n   }\r\n}","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport shortid from \"shortid\";\r\nimport Chapter from \"./Chapter\"\r\n\r\nexport default class Chapters extends React.Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n         chapters: [],\r\n         clr_num: 0,\r\n         chapter_num: 1,\r\n      }\r\n   }\r\n   addChapter = () => {\r\n      this.setState({\r\n         chapters: [...this.state.chapters, {\r\n            id: shortid.generate(),\r\n            text: \"\",\r\n            pages: [],\r\n            clr_num: this.state.clr_num,\r\n            num: this.state.chapter_num,\r\n         }],\r\n         clr_num: (this.state.clr_num === 10) ? 0 : this.state.clr_num + 1,\r\n         chapter_num: this.state.chapter_num + 1,\r\n      });\r\n   }\r\n   componentDidUpdate() {\r\n      this.clr_num++;\r\n   }\r\n   render() {\r\n      let chapters = this.state.chapters;\r\n      return (\r\n         <div className=\"Chapters\">\r\n            {chapters.map(chapter => (\r\n               <Chapter named = {chapter.named} num={chapter.num} clr_num={chapter.clr_num}\r\n                  key={chapter.id} />\r\n            )\r\n            )}\r\n            <button\r\n               onClick={() => this.addChapter()} className=\"addBtn\">\r\n               <FontAwesomeIcon className=\"add_icon\"\r\n                  icon={[\"fas\", \"plus\"]} /> Add Section\r\n            </button>\r\n         </div>\r\n      )\r\n   }\r\n}","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nexport default class Pages extends React.Component {\r\n   render() {\r\n      return (\r\n         <div className=\"Pages\">\r\n            <button className=\"addBtn\"><FontAwesomeIcon\r\n               className=\"add_icon\" icon={[\"fas\", \"plus\"]} />   Add Page</button>\r\n         </div>\r\n      )\r\n   }\r\n}","import React from \"react\";\r\nimport Chapters from \"./Chapters\";\r\nimport Pages from \"./Pages\";\r\n\r\nexport default class Aside extends React.Component {\r\n   render() {\r\n      return (\r\n         <div className=\"Aside\">\r\n            <Chapters />\r\n            <Pages />\r\n         </div>\r\n      );\r\n   }\r\n}","import React from \"react\";\r\n\r\nexport default class Main extends React.Component{\r\n   render(){\r\n      return(\r\n         <div className=\"Main\">\r\n\r\n         </div>\r\n      )\r\n   }\r\n}","import React from \"react\";\r\nimport Nav from \"./Nav\";\r\nimport Aside from \"./Aside\";\r\nimport Main from \"./Main\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport { faAddressBook, faClock } from \"@fortawesome/free-regular-svg-icons\";\r\nimport { faSearch, faPlus } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nlibrary.add(faPlus, faSearch, faAddressBook, faClock);\r\nexport default class OneNoteApp extends React.Component{\r\n   render(){\r\n      return (\r\n         <div className=\"App\">\r\n            <Nav/>\r\n            <Aside/>\r\n            <Main/>\r\n         </div>\r\n      )\r\n   }\r\n}","import React from 'react';\nimport OneNoteApp from \"./components/OneNoteApp\"\nimport './App.css';\n\nfunction App() {\n  return (\n    <OneNoteApp/>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}